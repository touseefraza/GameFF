// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#fff",
      "flex": 1,
      "height": 1334,
    }
  }
>
  <RCTScrollView
    automaticallyAdjustContentInsets={false}
    contentContainerStyle={
      Array [
        Object {
          "padding": undefined,
        },
        undefined,
      ]
    }
    contentInset={
      Object {
        "bottom": 0,
      }
    }
    enableAutomaticScroll={true}
    enableResetScrollToCoords={true}
    extraHeight={75}
    extraScrollHeight={0}
    getScrollResponder={[Function]}
    handleOnScroll={[Function]}
    keyboardDismissMode="interactive"
    keyboardOpeningTime={250}
    keyboardShouldPersistTaps="handled"
    keyboardSpace={0}
    onScroll={[Function]}
    resetKeyboardSpace={[Function]}
    resetScrollToCoords={
      Object {
        "x": 0,
        "y": 0,
      }
    }
    scrollEventThrottle={1}
    scrollForExtraHeightOnAndroid={[Function]}
    scrollToEnd={[Function]}
    scrollToFocusedInput={[Function]}
    scrollToPosition={[Function]}
    showsVerticalScrollIndicator={true}
    style={
      Object {
        "backgroundColor": "transparent",
        "flex": 1,
      }
    }
    viewIsInsideTabBar={false}
  >
    <View>
      <RCTScrollView
        closeOnRowBeginSwipe={false}
        closeOnRowPress={true}
        closeOnScroll={true}
        dataArray={
          Array [
            Object {
              "caption": "Home",
              "route": "Home",
            },
            Object {
              "caption": "Blank Page",
              "route": "BlankPage",
            },
            Object {
              "caption": "Logout",
              "route": "Login",
            },
          ]
        }
        dataSource={
          ListViewDataSource {
            "items": 3,
          }
        }
        directionalDistanceChangeThreshold={2}
        disableLeftSwipe={false}
        disableRightSwipe={false}
        enableEmptySections={true}
        leftOpenValue={0}
        previewFirstRow={false}
        recalculateHiddenLayout={false}
        renderRow={[Function]}
        renderScrollComponent={[Function]}
        rightOpenValue={0}
        style={
          Array [
            Object {},
            Object {
              "marginTop": 40,
            },
          ]
        }
        swipeToOpenPercent={50}
      >
        <View>
          <View
            accessible={true}
            isTVSelectable={true}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={null}
          >
            <View
              button={true}
              onPress={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "transparent",
                  "borderBottomWidth": 0.5,
                  "borderColor": "#c9c9c9",
                  "flexDirection": "row",
                  "marginLeft": 16,
                  "paddingBottom": 13,
                  "paddingRight": 16,
                  "paddingTop": 13,
                }
              }
            >
              <Text
                style={
                  Object {
                    "alignSelf": "center",
                    "color": "#000",
                    "fontFamily": "System",
                    "fontSize": 16,
                  }
                }
                uppercase={false}
              >
                Home
              </Text>
            </View>
          </View>
          <View
            accessible={true}
            isTVSelectable={true}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={null}
          >
            <View
              button={true}
              onPress={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "transparent",
                  "borderBottomWidth": 0.5,
                  "borderColor": "#c9c9c9",
                  "flexDirection": "row",
                  "marginLeft": 16,
                  "paddingBottom": 13,
                  "paddingRight": 16,
                  "paddingTop": 13,
                }
              }
            >
              <Text
                style={
                  Object {
                    "alignSelf": "center",
                    "color": "#000",
                    "fontFamily": "System",
                    "fontSize": 16,
                  }
                }
                uppercase={false}
              >
                Blank Page
              </Text>
            </View>
          </View>
          <View
            accessible={true}
            isTVSelectable={true}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={null}
          >
            <View
              button={true}
              onPress={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "transparent",
                  "borderBottomWidth": 0.5,
                  "borderColor": "#c9c9c9",
                  "flexDirection": "row",
                  "marginLeft": 16,
                  "paddingBottom": 13,
                  "paddingRight": 16,
                  "paddingTop": 13,
                }
              }
            >
              <Text
                style={
                  Object {
                    "alignSelf": "center",
                    "color": "#000",
                    "fontFamily": "System",
                    "fontSize": 16,
                  }
                }
                uppercase={false}
              >
                Logout
              </Text>
            </View>
          </View>
        </View>
      </RCTScrollView>
    </View>
  </RCTScrollView>
</View>
`;
